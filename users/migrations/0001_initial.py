# Generated by Django 5.1.1 on 2025-01-06 16:25

import django.contrib.auth.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='usuarios/fotos/', verbose_name='Foto de perfil')),
                ('first_name', models.CharField(max_length=150, verbose_name='Nombres')),
                ('last_name', models.CharField(max_length=150, verbose_name='Apellidos')),
                ('username', models.CharField(max_length=150, unique=True, verbose_name='Nombre de usuario')),
                ('email', models.EmailField(max_length=254, verbose_name='Correo electrónico')),
                ('is_staff', models.BooleanField(default=False, help_text='Indica si este usuario puede iniciar sesión en el sitio de administración.', verbose_name='Es personal')),
                ('is_active', models.BooleanField(default=True, help_text='Indica si este usuario debe ser tratado como activo. Desmarque esto en lugar de eliminar cuentas.', verbose_name='Está activo')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='Último inicio de sesión')),
                ('groups', models.ManyToManyField(blank=True, help_text='Los grupos a los que pertenece este usuario.', related_name='customuser_set', to='auth.group', verbose_name='Grupos')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Permisos específicos para este usuario.', related_name='customuser_permissions_set', to='auth.permission', verbose_name='Permisos de usuario')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
